# This workflow will install Python dependencies, run tests and lint with a single version of Python

name: MLOps Model Deployment and Python application

on:
  push:
    branches: 
       - "main"
  pull_request:
    branches: 
      - "main" 

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest


  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code for Dockerizing to deploy as containers
      uses: actions/checkout@v3

    - name: Install the gcloud cli
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GOOGLE_PROJECTID }}
        
    - name: Log in to GCP Artifact Registory for docker image pushing
      run: gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Build the Docker image
      run: docker build -t us-central1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECTID }}/gcp-docker-repo/mlopstest:latest .

    - name: Push the Docker image
      run: docker push us-central1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECTID }}/gcp-docker-repo/mlopstest:latest


  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
    - name: Checkout code for Kubernetes resource file for Deployment
      uses: actions/checkout@v3

    - name: install the gcloud cli
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GOOGLE_PROJECTID }}
        service_account_key: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        install_components: 'gke-gcloud-auth-plugin'
        export_default_credentials: true

    - name: Replace placeholders in kubernetes resource.yml
      run: |
        sed -i 's/{{PROJECTID}}/${{ secrets.GOOGLE_PROJECTID }}/g' kubernetes/resource.yml

    - name: deploy to gke
      env:
        GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECTID }}
      run: |
        gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1
        kubectl delete --ignore-not-found=true -f kubernetes/resource.yml && kubectl apply -f kubernetes/resource.yml